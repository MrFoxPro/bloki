name: next.bloki.app

on:
  push:
    branches:
      - next

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CI: 1
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: "next"

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: 17.9.0

      - name: install pnpm
        uses: pnpm/action-setup@v2.1.0
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: pnpm install
        run: pnpm i

    #   - name: install pw browsers
    #     working-directory: ./tests
    #     run: pnpx playwright install --with-deps

    #   - name: run tests
    #     run: pnpm test

      - name: build all
        env:
            DOTNET_NOLOGO: true
        run: pnpm build

      - name: copy via scp
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          # This is important to keep "/"
          source: "dist/api,dist/web"
          target: "/home/deploy/bloki-next"
          overwrite: true
          command_timeout: 1m
          strip_components: 1

    #   - name: Restart service bloki-next
    #     uses: appleboy/ssh-action@v0.1.4
    #     with:
    #       host: ${{ secrets.HOST }}
    #       username: ${{ secrets.USERNAME }}
    #       port: ${{ secrets.PORT }}
    #       key: ${{ secrets.SSHKEY }}
    #       script: sudo systemctl restart bloki-next

      - name: Notify telegram
        env:
            TG_KEY: ${{ secrets.TG_KEY }}
            TG_CHANNEL: ${{ secrets.TG_CHANNEL }}
        run: pnpm run -F tg start
