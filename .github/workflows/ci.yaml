name: bloki CI

on:
  push:
    branches:
      - master
      - next

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TARGET_NAME: ${{ github.ref_name }}.bloki.app
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.11.0

      - name: install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: pnpm install
        run: pnpm i --frozen-lockfile

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: setup cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      #   - name: install pw browsers
      #     working-directory: ./tests
      #     run: pnpx playwright install --with-deps

      #   - name: run tests
      #     run: pnpm test

      - name: build all
        run: pnpm build

      - name: scp rust build
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          # This is important to keep "/"
          source: dist/api,dist/web
          target: /home/deploy/${{ TARGET_NAME }}
          overwrite: true
          command_timeout: 1m
          strip_components: 1

      - name: Restart service next.bloki.app
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: sudo systemctl restart ${{ TARGET_NAME }}

      - name: Notify telegram
        env:
          TG_KEY: ${{ secrets.TG_KEY }}
          TG_CHANNEL: ${{ secrets.TG_CHANNEL }}
        run: pnpm run -F tg start
